# randomly place ants on cities
ant_tours = []
for k in range(num_ants):
    ant_tour = random.sample(range(num_cities), num_cities)
    ant_tours.append(ant_tour)

for t in range(max_it):
    # initialise ants
    ant_tours = []
    ant_tour_lengths = []

    # for each ant
    for k in range(num_ants):
        # initialise ant tour
        ant_tour = []
        ant_tour_length = 0

        # initialise unvisited cities
        unvisited_cities = [i for i in range(num_cities)]

        # choose random start city
        start_city = random.choice(unvisited_cities)
        ant_tour.append(start_city)
        unvisited_cities.remove(start_city)

        # while there are unvisited cities
        while unvisited_cities:
            # calculate probabilities for each unvisited city
            probabilities = [0 for i in range(num_cities)]
            for city in unvisited_cities:
                # calculate probability for each unvisited city
                numerator = pheromone_matrix[ant_tour[-1]][city] ** 2
                denominator = sum([pheromone_matrix[ant_tour[-1]][i] ** 2 for i in unvisited_cities])
                probabilities[city] = numerator / denominator

            # choose next city based on probabilities
            next_city = random.choices(unvisited_cities, weights=probabilities)[0]
            ant_tour.append(next_city)
            unvisited_cities.remove(next_city)

        # calculate length of ant tour
        ant_tour_length = get_tour_length(ant_tour)

        # update best tour if necessary
        if ant_tour_length < best_tour_length:
            best_tour = ant_tour
            best_tour_length = ant_tour_length

        # add ant tour to list of ant tours
        ant_tours.append(ant_tour)
        ant_tour_lengths.append(ant_tour_length)

    # update pheromone matrix
    rho = 0.1 # evaporation rate
    for i in range(num_cities):
        for j in range(num_cities):
            # evaporation
            pheromone_matrix[i][j] *= (1 - rho)

            # deposit pheromone
            for k in range(num_ants):
                pheromone_matrix[i][j] += 1 / ant_tour_lengths[k]
